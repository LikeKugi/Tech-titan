-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."Internee"
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
    mobile character varying(12) NOT NULL,
    email character varying(40) NOT NULL,
    snils character varying(11) NOT NULL,
    name character varying(40) NOT NULL,
    surname character varying(40) NOT NULL,
    patronymic character varying(40) NOT NULL,
    birthday date NOT NULL,
    "nickName" character varying(40),
    citizenship smallint NOT NULL DEFAULT 1,
    city integer NOT NULL DEFAULT 1,
    "yearStudy" smallint,
    "hasWorkExperience" boolean NOT NULL DEFAULT false,
    "moscowDistrict" smallint,
    trainee boolean NOT NULL DEFAULT false,
    essay character varying[],
    photo character varying,
    "notifyByMail" boolean NOT NULL DEFAULT true,
    rating smallint NOT NULL DEFAULT 0,
    cv character varying,
    "eduProgram" bigint NOT NULL,
    "internshipId" bigint,
    "internshipStatus" integer,
    PRIMARY KEY (id),
    UNIQUE (id)
);

COMMENT ON TABLE public."Internee"
    IS 'Стажер';

COMMENT ON COLUMN public."Internee".trainee
    IS 'Показывает, стал ли кандидат стажером';

COMMENT ON COLUMN public."Internee".essay
    IS 'До 3-х ссылок на эссе';

COMMENT ON COLUMN public."Internee".photo
    IS 'ссылка на фото на сервере';

COMMENT ON COLUMN public."Internee".cv
    IS 'Ссылка на резюме стажера / кандидата на портале';

CREATE TABLE IF NOT EXISTS public."Citizenship"
(
    id smallint NOT NULL GENERATED ALWAYS AS IDENTITY,
    name character varying NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (id)
);

CREATE TABLE IF NOT EXISTS public."City"
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    name character varying(40) NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (id)
);

COMMENT ON TABLE public."City"
    IS 'Список городов';

CREATE TABLE IF NOT EXISTS public."PasswordsInternee"
(
    id bigint NOT NULL,
    password character varying NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (id)
);

COMMENT ON COLUMN public."PasswordsInternee".password
    IS 'Зашифрованный пароль';

CREATE TABLE IF NOT EXISTS public."MoscowDistricts"
(
    id smallint NOT NULL GENERATED ALWAYS AS IDENTITY,
    name character varying NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (id)
);

COMMENT ON TABLE public."MoscowDistricts"
    IS 'Округи Москвы';

CREATE TABLE IF NOT EXISTS public."News"
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
    date date NOT NULL,
    header character varying NOT NULL,
    body character varying NOT NULL,
    photo character varying,
    PRIMARY KEY (id),
    UNIQUE (id)
);

COMMENT ON COLUMN public."News".photo
    IS 'ссылка на фото к новости - может отсутствовать';

CREATE TABLE IF NOT EXISTS public."Mentor"
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
    mobile character varying(12) NOT NULL,
    "e-mail" character varying(40) NOT NULL,
    snils character varying(11) NOT NULL,
    name character varying(40) NOT NULL,
    surname character varying(40) NOT NULL,
    patronymic character varying(40) NOT NULL,
    birthday date NOT NULL,
    photo character varying,
    "notifyByMail" boolean NOT NULL DEFAULT true,
    "interneesId" bigint[],
    "internshipRequestId" bigint[],
    PRIMARY KEY (id),
    UNIQUE (id)
);

COMMENT ON TABLE public."Mentor"
    IS 'Куратор';

COMMENT ON COLUMN public."Mentor".photo
    IS 'ссылка на фото на сервере';

CREATE TABLE IF NOT EXISTS public."PasswordMentor"
(
    id bigint NOT NULL,
    password character varying NOT NULL,
    UNIQUE (id)
);

COMMENT ON COLUMN public."PasswordMentor".password
    IS 'Зашифрованный пароль';

CREATE TABLE IF NOT EXISTS public."Tutor"
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
    mobile character varying(12) NOT NULL,
    "e-mail" character varying(40) NOT NULL,
    snils character varying(11) NOT NULL,
    name character varying(40) NOT NULL,
    surname character varying(40) NOT NULL,
    patronymic character varying(40) NOT NULL,
    birthday date NOT NULL,
    photo character varying,
    "notifyByMail" boolean NOT NULL DEFAULT true,
    "interneesId" bigint[],
    "internshipRequestId" bigint[],
    "tutorSchoolProgramsId" bigint,
    "tutorSchoolResult" smallint,
    "tutorSchoolStage" character varying,
    PRIMARY KEY (id),
    UNIQUE (id)
);

COMMENT ON TABLE public."Tutor"
    IS 'Наставник - подписывает табели, их находим через зависимых стажеров, к которым привязан табель';

COMMENT ON COLUMN public."Tutor".photo
    IS 'ссылка на фото на сервере';

COMMENT ON COLUMN public."Tutor"."tutorSchoolStage"
    IS 'через выпадающий список - этап, на котором наставник в школе (например, от 1 до 5) , где 5 - закончил обучение';

CREATE TABLE IF NOT EXISTS public."PasswordTutor"
(
    id bigint NOT NULL,
    password character varying NOT NULL,
    UNIQUE (id)
);

COMMENT ON COLUMN public."PasswordTutor".password
    IS 'Зашифрованный пароль';

CREATE TABLE IF NOT EXISTS public."HR"
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
    mobile character varying(12) NOT NULL,
    "e-mail" character varying(40) NOT NULL,
    snils character varying(11) NOT NULL,
    name character varying(40) NOT NULL,
    surname character varying(40) NOT NULL,
    patronymic character varying(40) NOT NULL,
    birthday date NOT NULL,
    photo character varying,
    "notifyByMail" boolean NOT NULL DEFAULT true,
    internees bigint[],
    "internshipRequestId" bigint[],
    tutors bigint[],
    mentors bigint[],
    PRIMARY KEY (id),
    UNIQUE (id)
);

COMMENT ON TABLE public."HR"
    IS 'Кадры';

COMMENT ON COLUMN public."HR".photo
    IS 'ссылка на фото на сервере';

COMMENT ON COLUMN public."HR".internees
    IS 'стажеры / кандидаты, которыми занимается сотрудник HR';

COMMENT ON COLUMN public."HR"."internshipRequestId"
    IS 'Заявки на стажировку в работе (только со стадией - у HR)...';

CREATE TABLE IF NOT EXISTS public."PasswordHR"
(
    id bigint NOT NULL,
    password character varying NOT NULL,
    UNIQUE (id)
);

COMMENT ON COLUMN public."PasswordHR".password
    IS 'Зашифрованный пароль';

CREATE TABLE IF NOT EXISTS public."Timetable"
(
    id bigint NOT NULL,
    "eduProgramID" bigint NOT NULL,
    UNIQUE (id)
);

COMMENT ON TABLE public."Timetable"
    IS 'Табель стажера';

CREATE TABLE IF NOT EXISTS public."PresencePull"
(
    id bigint NOT NULL,
    date date NOT NULL,
    presence boolean,
    PRIMARY KEY (id),
    UNIQUE (id)
);

COMMENT ON TABLE public."PresencePull"
    IS 'Отметки присутствия стажеров на обучении по датам - детали (на какой программе) стыкуются по самой программе. ';

CREATE TABLE IF NOT EXISTS public."EduPrograms"
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
    name character varying NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (id)
);

CREATE TABLE IF NOT EXISTS public."ModulesEdu"
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
    "eduProgramId" bigint NOT NULL,
    topic character varying NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (id)
);

CREATE TABLE IF NOT EXISTS public."TopicsEdu"
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
    "moduleId" bigint NOT NULL,
    name character varying NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (id)
);

COMMENT ON TABLE public."TopicsEdu"
    IS 'Темы учебной программы';

CREATE TABLE IF NOT EXISTS public."Lessons"
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
    "topicId" bigint NOT NULL,
    name character varying NOT NULL,
    datestamp date NOT NULL,
    obligatory boolean NOT NULL DEFAULT false,
    professor bigint NOT NULL,
    location integer NOT NULL,
    duration smallint NOT NULL,
    description character varying,
    photo character varying,
    "materialsId" bigint,
    "archivedStatus" boolean NOT NULL DEFAULT false,
    PRIMARY KEY (id),
    UNIQUE (id),
    UNIQUE (location),
    UNIQUE (professor),
    UNIQUE ("materialsId")
);

COMMENT ON TABLE public."Lessons"
    IS 'Уроки учебной программы';

COMMENT ON COLUMN public."Lessons".photo
    IS 'ссылка на фото к уроку на сервере';

CREATE TABLE IF NOT EXISTS public."Professors"
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
    mobile character varying(12) NOT NULL,
    "e-mail" character varying(40) NOT NULL,
    snils character varying(11) NOT NULL,
    name character varying(40) NOT NULL,
    surname character varying(40) NOT NULL,
    patronymic character varying(40) NOT NULL,
    birthday date NOT NULL,
    photo character varying,
    "position" integer NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (id),
    UNIQUE ("position")
);

COMMENT ON TABLE public."Professors"
    IS 'Профессора, которые читают лекции (вебинары)';

COMMENT ON COLUMN public."Professors".photo
    IS 'ссылка на фото на сервере';

CREATE TABLE IF NOT EXISTS public."Positions"
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    name character varying NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (id)
);

COMMENT ON TABLE public."Positions"
    IS 'Должности профессоров, сотрудников, которые читают лекции';

CREATE TABLE IF NOT EXISTS public."Locations"
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    name character varying NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (id)
);

COMMENT ON TABLE public."Locations"
    IS 'Место проведения лекций - онлайн, либо адрес и т.п.';

CREATE TABLE IF NOT EXISTS public."Materials"
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    name character varying NOT NULL,
    type smallint NOT NULL DEFAULT 1,
    PRIMARY KEY (id),
    UNIQUE (id),
    UNIQUE (type)
);

COMMENT ON TABLE public."Materials"
    IS 'Материалы для лекций';

CREATE TABLE IF NOT EXISTS public."TypesMaterials"
(
    id smallint NOT NULL GENERATED ALWAYS AS IDENTITY,
    name character varying NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (id)
);

COMMENT ON TABLE public."TypesMaterials"
    IS 'Типы материалов - обязательные, факультативные, рекомендации и т.п.';

CREATE TABLE IF NOT EXISTS public."InternshipRequest"
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
    company bigint NOT NULL,
    author bigint NOT NULL,
    "dataRange" daterange NOT NULL,
    stage integer NOT NULL,
    closed boolean NOT NULL DEFAULT true,
    review character varying,
    PRIMARY KEY (id),
    UNIQUE (id)
);

COMMENT ON TABLE public."InternshipRequest"
    IS 'Заявка на стажировку';

COMMENT ON COLUMN public."InternshipRequest".author
    IS 'Это наставник';

COMMENT ON COLUMN public."InternshipRequest".stage
    IS 'Статус заявки - направлена в HR, возвращена куратору, опубликована....- помогает понять, кому её отображать';

COMMENT ON COLUMN public."InternshipRequest".closed
    IS 'true - заявка активная';

COMMENT ON COLUMN public."InternshipRequest".review
    IS 'Отзыв стажера о стажировке через 2 месяца после её прохождения';

CREATE TABLE IF NOT EXISTS public."Companies"
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
    name character varying NOT NULL,
    rating smallint,
    reviews character varying[],
    PRIMARY KEY (id),
    UNIQUE (id)
);

COMMENT ON TABLE public."Companies"
    IS 'Компании, которые подают заявки на стажировки (подразделния Прав-ва Москвы)';

COMMENT ON COLUMN public."Companies".rating
    IS 'рейтинг организации на основе отзывов стажеров';

COMMENT ON COLUMN public."Companies".reviews
    IS 'Тексты отзывов стажеров';

CREATE TABLE IF NOT EXISTS public."StatusesInternship"
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    name character varying NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (id)
);

COMMENT ON TABLE public."StatusesInternship"
    IS 'Статус рассмотрения заявки на стажировку - на рассмотрение, одобрена, отказ. ';

CREATE TABLE IF NOT EXISTS public."StagesInternship"
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    name character varying NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (id)
);

COMMENT ON TABLE public."StagesInternship"
    IS 'Статус заявки - направлена в HR, возвращена куратору, опубликована....- помогает понять, кому её отображать';

CREATE TABLE IF NOT EXISTS public."TestorAssignment"
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
    name character varying NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (id)
);

COMMENT ON TABLE public."TestorAssignment"
    IS 'Ссылка на доп. тестирование, либо задание в рамках отбора на стажировку';

CREATE TABLE IF NOT EXISTS public."ResultsPull"
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    "idTestorAssignment" bigint NOT NULL,
    "interneeId" bigint NOT NULL,
    date date NOT NULL,
    comments character varying,
    PRIMARY KEY ("idTestorAssignment"),
    UNIQUE (id)
);

COMMENT ON TABLE public."ResultsPull"
    IS 'Ссылка на доп. тестирование, либо задание в рамках отбора на стажировку';

COMMENT ON COLUMN public."ResultsPull".comments
    IS 'Рекомендации по итогам прохождения тестирования, комментарии';

CREATE TABLE IF NOT EXISTS public."TutorSchoolPrograms"
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
    name character varying NOT NULL,
    dates date[] NOT NULL,
    materials bigint,
    PRIMARY KEY (id),
    UNIQUE (id)
);

COMMENT ON TABLE public."TutorSchoolPrograms"
    IS 'Школа наставников - программы';

ALTER TABLE IF EXISTS public."Internee"
    ADD FOREIGN KEY (citizenship)
    REFERENCES public."Citizenship" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Internee"
    ADD FOREIGN KEY (city)
    REFERENCES public."City" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Internee"
    ADD FOREIGN KEY ("moscowDistrict")
    REFERENCES public."MoscowDistricts" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Internee"
    ADD FOREIGN KEY ("eduProgram")
    REFERENCES public."EduPrograms" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Internee"
    ADD FOREIGN KEY ("internshipId")
    REFERENCES public."InternshipRequest" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Internee"
    ADD FOREIGN KEY ("internshipStatus")
    REFERENCES public."StatusesInternship" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."PasswordsInternee"
    ADD FOREIGN KEY (id)
    REFERENCES public."Internee" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."PasswordMentor"
    ADD FOREIGN KEY (id)
    REFERENCES public."Mentor" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Tutor"
    ADD FOREIGN KEY ("tutorSchoolProgramsId")
    REFERENCES public."TutorSchoolPrograms" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."PasswordTutor"
    ADD FOREIGN KEY (id)
    REFERENCES public."Tutor" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."PasswordHR"
    ADD FOREIGN KEY (id)
    REFERENCES public."HR" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."PresencePull"
    ADD FOREIGN KEY (id)
    REFERENCES public."Internee" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."ModulesEdu"
    ADD FOREIGN KEY ("eduProgramId")
    REFERENCES public."EduPrograms" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."TopicsEdu"
    ADD FOREIGN KEY ("moduleId")
    REFERENCES public."ModulesEdu" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Lessons"
    ADD FOREIGN KEY ("topicId")
    REFERENCES public."TopicsEdu" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Professors"
    ADD FOREIGN KEY (id)
    REFERENCES public."Lessons" (professor) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Positions"
    ADD FOREIGN KEY (id)
    REFERENCES public."Professors" ("position") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Locations"
    ADD FOREIGN KEY (id)
    REFERENCES public."Lessons" (location) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Materials"
    ADD FOREIGN KEY (id)
    REFERENCES public."Lessons" ("materialsId") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."TypesMaterials"
    ADD FOREIGN KEY (id)
    REFERENCES public."Materials" (type) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."InternshipRequest"
    ADD FOREIGN KEY (company)
    REFERENCES public."Companies" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."InternshipRequest"
    ADD FOREIGN KEY (stage)
    REFERENCES public."StagesInternship" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."TestorAssignment"
    ADD FOREIGN KEY (id)
    REFERENCES public."InternshipRequest" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."ResultsPull"
    ADD FOREIGN KEY ("idTestorAssignment")
    REFERENCES public."TestorAssignment" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."ResultsPull"
    ADD FOREIGN KEY ("interneeId")
    REFERENCES public."Internee" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;